@page "/players/{LeagueId:int}"

@using Soccer.Shared.FutDb
@using Soccer.Client.Pages.Paginations;
@using Soccer.Client.Services;
@inject IFunctionServices Services;

@if (Current != null)
{
    <div class="container">
        <div class="row">
            @for (int i = 0; i < Current.PlayerList.Count; i++)
            {
                <div class="col-sm">
                    <PlayerComponents Player="Current.PlayerList.ElementAt(i)"></PlayerComponents>
                </div>
            }
        </div>
    </div>

    <PaginationComponent PaginationInfo="Current" GoToPage="UpdateList"></PaginationComponent>
}

@code {
    [Parameter]
    public int LeagueId { get; set; }
    [Parameter]
    public Players Current { get; set; }
    private int limit = 21;

    protected override async Task OnInitializedAsync()
    {
        Current = await Services.GetPlayer(LeagueId, limit, 0);
    }

    private async Task UpdateList(int nextPage)
    {
        Current = await Services.GetPlayer(LeagueId, limit, nextPage);
        this.StateHasChanged();
    }
}
